
pipeline {
  agent {
    kubernetes {
      cloud 'kubernetes'
      yaml '''
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            agent: jenkins-agent
        spec:
          containers:
          - name: curl
            image: gcr.io/cloud-builders/curl:latest
            command:
            - cat
            tty: true
      '''
    }
  }
  parameters {
    //string(name: 'vaulturl', defaultValue: 'http://host.docker.internal:8200', description: 'Vault API URL')
    string(name: 'vaulturl', defaultValue: 'http://vault.vault.svc.cluster.local:8200', description: 'Vault API URL')
    string(name: 'vaultpath', defaultValue: 'kv/cicd', description: 'Secrets path for Vault static secrets')
    string(name: 'tfepath', defaultValue: 'terraform/creds/tfe-role', description: 'Secrets path for Terraform secrets')
    string(name: 'vaultns', defaultValue: 'root', description: 'Vault Namespace')
    string(name: 'vaultcreds', defaultValue: 'k8s-vaultdemo', description: 'Vault credentials')
    string(name: 'tfe_wkspc_id', defaultValue: 'ws-eAJzKDto569WUEpj', description: 'TFC Workspacet')
    string(name: 'tfe_varname', defaultValue: 'machine', description: 'Variable name')
    //string(name: 'tfe_varvalue', defaultValue: 'n2-standard-2', description: 'Machine type value ')
  }
  stages {
    stage ('Variables') {
      steps {
        withVault(configuration: [failIfNotFound: true, timeout: 10, vaultCredentialId: "${params.vaultcreds}", vaultUrl: "${params.vaulturl}"],
        vaultSecrets: [
          [
            path: "${params.vaultpath}", 
            secretValues: [
              [envVar: 'tfe_varvalue', vaultKey: "${params.tfe_varname}"],
            ]
          ],
          [
            path: "${params.tfepath}",
            engineVersion: 1,
            secretValues: [
              [envVar: "tfe_token", vaultKey: "token"]
            ]
          ]
        ]) {
          container('curl'){
            echo "${env.tfe_token}"
            sh """
              curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -o ./jq-linux64 && chmod 755 ./jq-linux64
              curl -H "Authorization: Bearer ${env.tfe_token}" -H "Content-Type: application/vnd.api+json" -X GET "https://app.terraform.io/api/v2/workspaces/${params.tfe_wkspc_id}/vars" > wvars.json
              ls -la
              export VARID="\$(./jq-linux64 -r '.data[] | select(.attributes.key == "${params.tfe_varname}") | .id' wvars.json)"
              echo "This is the var ID: \$VARID"
              cat - <<EOF > varpayload.json
{"data": {"attributes": {"key": \"${params.tfe_varname}\","value": \"${env.tfe_varvalue}\","hcl": false, "sensitive": false},"type":"vars","id":\"\$VARID\"}}
EOF
              cat varpayload.json
              curl -H "Authorization: Bearer ${env.tfe_token}" -H "Content-Type: application/vnd.api+json" -X PATCH -d @varpayload.json "https://app.terraform.io/api/v2/workspaces/${params.tfe_wkspc_id}/vars/\$VARID"
            """
          }
        }
      }
    }
    stage ('Terraform') {
      steps {
        withVault(configuration: [failIfNotFound: true, timeout: 10, vaultCredentialId: "${params.vaultcreds}", vaultUrl: "${params.vaulturl}"],
        vaultSecrets: [
          [
            path: "${params.vaultpath}", 
            secretValues: [
              [envVar: 'tfe_org', vaultKey: 'tfe_org']
            ]
          ],
          [
            path: "${params.tfepath}",
            engineVersion: 1,
            secretValues: [
              [envVar: "tfe_token", vaultKey: "token"]
            ]
          ]
        ]) {
          container('curl'){
            echo "${env.tfe_token}"
            sh """
              curl -H "Authorization: Bearer ${env.tfe_token}" -H "Content-Type: application/vnd.api+json" -X GET "https://app.terraform.io/api/v2/organizations/${env.tfe_org}/workspaces"
              curl -H "Authorization: Bearer ${env.tfe_token}" -H "Content-Type: application/vnd.api+json" -X POST -d '{"data": {"attributes": {"is-destroy": false,"message": "Jenkins Demo run"},"type":"runs","relationships": {"workspace": {"data": {"type": "workspaces","id": \"${params.tfe_wkspc_id}\"}}}}}' "https://app.terraform.io/api/v2/runs"
            """
          }
        }
      }
    }
  }
}